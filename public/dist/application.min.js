"use strict";var ApplicationConfiguration=function(){var applicationModuleName="scenariie",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","wysiwyg.module","colorpicker.module"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("campagnes"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("gamesessions"),ApplicationConfiguration.registerModule("users"),angular.module("campagnes").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Campagnes","campagnes","dropdown","/campagnes(/create)?"),Menus.addSubMenuItem("topbar","campagnes","Liste des campagnes","campagnes"),Menus.addSubMenuItem("topbar","campagnes","Cr√©er une campagne","campagnes/create")}]),angular.module("campagnes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCampagnes",{url:"/campagnes",templateUrl:"modules/campagnes/views/list-campagnes.client.view.html"}).state("createCampagne",{url:"/campagnes/create",templateUrl:"modules/campagnes/views/create-campagne.client.view.html"}).state("viewCampagne",{url:"/campagnes/:campagneId",templateUrl:"modules/campagnes/views/view-campagne.client.view.html"}).state("editCampagne",{url:"/campagnes/:campagneId/edit",templateUrl:"modules/campagnes/views/edit-campagne.client.view.html"}).state("createGamesession",{url:"/campagnes/:campagneId/create",templateUrl:"modules/gamesessions/views/create-gamesession.client.view.html"}).state("viewSession",{url:"/campagnes/:campagneId/:sessionId",templateUrl:"modules/campagnes/views/view-gamesession.client.view.html"}).state("editSession",{url:"/campagnes/:campagneId/:sessionId/edit",templateUrl:"modules/campagnes/views/edit-gamesession.client.view.html"})}]),angular.module("campagnes").controller("CampagnesController",["$scope","$stateParams","$location","$sce","Authentication","Campagnes","Gamesessions","Game",function($scope,$stateParams,$location,$sce,Authentication,Campagnes,Gamesessions,Game){$scope.authentication=Authentication,$scope.slogan="",$scope.summary="",$scope.title="",$scope.newGameSession=null,$scope.session=Game.getSession(),$scope.create=function(){var campagne=new Campagnes({name:this.name,description:this.description,gameSessions:[]});campagne.$save(function(response){$location.path("campagnes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(campagne){if(campagne){campagne.$remove();for(var i in $scope.campagnes)$scope.campagnes[i]===campagne&&$scope.campagnes.splice(i,1)}else $scope.campagne.$remove(function(){$location.path("campagnes")})},$scope.update=function(isValid){$scope.newGameSession={title:$scope.title,summary:$scope.summary,slogan:$scope.slogan,created:new Date,id:$scope.campagne.gameSessions.length},console.dir($scope.campagne),$scope.newGameSession&&$scope.campagne.gameSessions.push($scope.newGameSession);var campagne=$scope.campagne;isValid&&campagne.$update(function(){$location.path("campagnes/"+campagne._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.viewSession=function(id){Game.setSession(id),console.log("$scope.session : "+$scope.session)},$scope.removeSession=function(campagne){campagne=$scope.campagne,campagne.gameSessions.splice($scope.session,1);console.log(campagne.gameSessions.length);for(var i=0;i<campagne.gameSessions.length;i++)campagne.gameSessions[i].id>$scope.session&&campagne.gameSessions[i].id--;campagne.$update(function(){$location.path("campagnes/"+campagne._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.updateSession=function(isValid){$scope.newGameSession={title:this.title,summary:this.summary,slogan:this.slogan,created:new Date,id:this.session},console.dir($scope.newGameSession),$scope.newGameSession&&($scope.campagne.gameSessions[$scope.session]=$scope.newGameSession);var campagne=$scope.campagne;isValid&&campagne.$update(function(){$location.path("campagnes/"+campagne._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.campagnes=Campagnes.query(),console.log("--find--"),console.dir($scope.campagne)},$scope.findOne=function(){$scope.campagne=Campagnes.get({campagneId:$stateParams.campagneId}),console.log("--findOne--"),console.dir($scope.campagne)},$scope.trustedHtml=function(plainText){return $sce.trustAsHtml(plainText)}}]),angular.module("campagnes").filter("trusted",["$sce",function($sce){return function(text){return $sce.trustAsHtml(text)}}]),angular.module("campagnes").factory("Campagnes",["$resource",function($resource){return $resource("campagnes/:campagneId/:sessionId",{campagneId:"@_id",sessionId:"@id"},{update:{method:"PUT"}})}]).factory("Game",[function(){var session=0;return{getSession:function(){return session},setSession:function(id){session=id}}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("gamesessions").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGamesessions",{url:"/gamesessions",templateUrl:"modules/gamesessions/views/list-gamesessions.client.view.html"}).state("editGamesession",{url:"/campagnes/:campagneId/:gamesessionId/edit",templateUrl:"modules/gamesessions/views/edit-gamesession.client.view.html"})}]),angular.module("gamesessions").controller("GamesessionsController",["$scope","$stateParams","$location","Authentication","Gamesessions",function($scope,$stateParams,$location,Authentication,Gamesessions){$scope.authentication=Authentication,$scope.create=function(){var gamesession=new Gamesessions({title:this.title,summary:this.summary,slogan:this.slogan});gamesession.$save(function(response){$location.path("gamesessions/"+response._id),$scope.title="",$scope.summary="",$scope.slogan=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(gamesession){if(gamesession){gamesession.$remove();for(var i in $scope.gamesessions)$scope.gamesessions[i]===gamesession&&$scope.gamesessions.splice(i,1)}else $scope.gamesession.$remove(function(){$location.path("gamesessions")})},$scope.update=function(){var gamesession=$scope.gamesession;gamesession.$update(function(){$location.path("gamesessions/"+gamesession._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.gamesessions=Gamesessions.query()},$scope.findOne=function(){$scope.gamesession=Gamesessions.get({gamesessionId:$stateParams.gamesessionId})}}]),angular.module("gamesessions").factory("Gamesessions",["$resource",function($resource){return $resource("gamesessions/:gamesessionId",{gamesessionId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);